@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav ml-auto">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <div class="c-blue i-medium d-flex">
            <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello <span class="text-lowercase">@UserManager.GetUserName(User)</span>!
                <i class="fas fa-user-alt mx-1 account"></i>
            </a>
        </div>

    </li>
    <li class="nav-item">
        <div class="c-blue i-medium d-flex">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new {area = ""})">
                <button id="logout" type="submit" class="nav-link btn btn-link">Logout <i class="fas fa-sign-out-alt mx-1 logout"></i></button>
            </form>
        </div>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
