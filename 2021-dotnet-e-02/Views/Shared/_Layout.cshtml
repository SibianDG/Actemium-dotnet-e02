@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Actemium Ticket System</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.3/css/all.css" integrity="sha384-SZXxX4whJ79/gErwcOYf+zWLeJdY/qpuqC4cAa9rOGUstPomtqpuNWT9wdPEn2fk" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
    <link rel="stylesheet" href="~/css/styles.css" />

    <link rel="icon" href="/images/icon.png">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-light fixed-top bg-white">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                <img src="/images/actemium.png" alt="Actemium logo" id="nav-logo" class="animate__animated inline-block">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
             @if (SignInManager.IsSignedIn(User))
             { 
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" asp-area="" asp-controller="Ticket" asp-action="Index">Tickets</a>
                </li>
                <li>
                    <a class="nav-link" asp-area="" asp-controller="Contract" asp-action="Index">Contracts</a>
                </li>
                <li>
                    <a class="nav-link" asp-area="" asp-controller="KDB" asp-action="Index">KDB</a>
                </li>
                <li>
                    <a class="nav-link" asp-area="" asp-controller="Statistics" asp-action="Index">Statistics</a>
                </li>
            </ul>
             }
            <partial name="_LoginPartial" />
            </div>
        </nav>
    </header>
    <div class="container-fluid mt-4 mt-lg-0">
        @if (TempData["message"] != null)
        {
            <div class="alert alert-success">@TempData["message"]</div>
        }
        @if (TempData["error"] != null)
        {
            <div class="alert alert-warning">@TempData["error"]</div>
        }
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

<footer class="fixed-bottom">
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                © 2021 Actemium - All rights reserved
            </div>
            <div class="col-md-4">
                <a href="https://www.actemium.com/privacy-policy/">Privacy Policy</a>
                <span class="c-blue">|</span>
                <a href="https://www.actemium.com/legal-notices/">Legal Notices</a>
            </div>
            <div class="col-md-4">
                Group E02
            </div>
        </div>
    </div>
</footer>

<div class="d-flex align-items-center justify-content-center">
    <div aria-live="polite" aria-atomic="true" class="notification text-center">
        <div class="toast" id="toast-privacy" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <i class="fas fa-info-circle mr-3 c-open"></i>
                <strong class="mr-auto c-blue">New updates</strong>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body">
                Hello, there <span id="word"></span> <span id="numberOfNotifications"></span> ticket <span id="updatesText"></span> since last time. Go to <a asp-controller="Home" asp-action="Index">Dashboard to see them</a>.
            </div>
        </div>
    </div>
</div>

<script
      src="https://code.jquery.com/jquery-3.6.0.min.js"
      integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
      crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
    <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script>
        AOS.init();
    </script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
    <script type="text/javascript">
    function googleTranslateElementInit() {
      new google.translate.TranslateElement({pageLanguage: 'en', layout: google.translate.TranslateElement.InlineLayout.SIMPLE}, 'google_translate_element');
    }
    </script>
    <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
<script >
//notification
function sleep (time) {
  return new Promise((resolve) => setTimeout(resolve, time));
}

function correctFormatWith0(d) {
    console.log(d)
    return `${d < 10 ? '0' : '' }${d}`;
}

let signedIn = @(SignInManager.IsSignedIn(User)? "true": "false")

const urlDetails = '@Url.Action("Details", "Ticket")';

$(document).ready(() => {
    if (signedIn){
        let cookieContent = document.cookie.split(";");
        cookieContent = cookieContent.filter(e => e.includes('lastNotificationSeen'));
        cookieContent = cookieContent.toString().split("=");
        let dateToSend;
        if (cookieContent[0].includes('lastNotificationSeen')){ 
            dateToSend = cookieContent[1];
            console.log("content " + cookieContent[0]);
            console.log("content2 " + cookieContent[1]);
        }
        console.log("dataToSend: "+dateToSend)
        $.ajax({
            url: '@Url.Action("GetLatestNotificationNumber", "Notification")',
            type: "get",
            data: "date="+dateToSend,
            dataType: "text",
            success: function (result) {
                console.log("NOTIFICATION:" + result)

                result = parseInt(result);
                if (result > 0){
                    console.log("NOTIFICATION:" + result)
                    $('#numberOfNotifications').text(result)
                    $(".toast").toast({ autohide: false }).toast('show');
                    if (result > 1){
                        $('#word').text('are');
                        $('#updatesText').text('updates');
                    } else {
                        $('#word').text('is');
                        $('#updatesText').text('update');
                    }
                }
            },
            error: function (xhr) {
                alert("failed "+xhr);
            }
        });
        $('.toast').on('hidden.bs.toast', function () {
            
            let date = new Date();
            let day = correctFormatWith0(date.getDate());      // yields date
            let month = correctFormatWith0(date.getMonth() + 1);    // yields month (add one as '.getMonth()' is zero indexed)
            let year = correctFormatWith0(date.getFullYear());  // yields year
            let hour = correctFormatWith0(date.getHours());     // yields hours 
            let minute = correctFormatWith0(date.getMinutes()); // yields minutes
            let second = correctFormatWith0(date.getSeconds()); // yields seconds
            
            // After this construct a string with the above results as below
            let time = day + "/" + month + "/" + year + " " + hour + ':' + minute + ':' + second;
            console.log("set: "+time)
            document.cookie = "lastNotificationSeen=" + time + "; path=/";
        })
    }
});

</script>
</body>
</html>
