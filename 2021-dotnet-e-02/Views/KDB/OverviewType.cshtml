@model System.Collections.Generic.IEnumerable<_2021_dotnet_e_02.Models.ActemiumKbItem>

@{
    ViewData["Title"] = "Overview "+ViewData["type"];
    Layout = "~/Views/Shared/_Layout.cshtml";
    string makeStringCapitalized(string s)
    {
        return s[..1].ToUpper() + s[1..].ToLower();
    }
}


<div class="my-2" data-aos-offset="120" data-aos-duration="500" data-aos-once="false" data-aos-easing="ease-out-cubic" data-aos-delay="100">
    <div class="container">
        <div class="container-fluid">
            <h1 class="text-center c-blue font-weight-bold text-uppercase">Knowledge Base Items</h1>
        </div>
    </div>
</div>

<div class="row" data-aos-offset="120" data-aos-duration="500" data-aos-once="false" data-aos-easing="ease-out-cubic" data-aos-delay="300">
    <div class="col-12 col-lg-7">
        <div class="bg-white pane" data-aos-offset="120" data-aos-duration="500" data-aos-once="false" data-aos-easing="ease-out-cubic" data-aos-delay="300">
            <div class="d-md-flex py-4">
                <div class="flex-grow-1">
                    <form action="#">
                        <div class="form-group d-flex">
                            <button type="submit" class="btn-ghost" asp-controller="KDB" asp-action="OverviewType">
                                <label for="searchKDB"><i class="fas fa-search mr-2"></i></label>
                            </button>
                            <input name="type" type="text" class="form-control" id="searchKDB" aria-describedby="todo" value="@ViewData["type"]" placeholder="Search for KBI">
                        </div>
                    </form>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table">
                    <thead>
                    <tr>
                        <th scope="col">@Html.DisplayNameFor(model => model.Title)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.Type)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.Keywords)</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model)
                    {
                        <tr id="getDetails" class="DetailsButtonTr" IdKBI="@item.KbItemId">
                            <td>@item.Title</td>
                            <td>@(makeStringCapitalized(item.Type.ToString()))</td>
                            <td>@item.Keywords</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            @if ((int) ViewData["totalPages"] > 1)
            {
            <nav aria-label="ticket navigation" class="d-flex justify-content-center align-content-center">
                <ul class="pagination">
                    @if ((int) ViewData["page"] > 1)
                    {
                        <li class="page-item">
                            <a asp-action="OverviewType" asp-route-type="@ViewData["type"]" asp-route-page="@((int) ViewData["page"] - 1)" class="page-link" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }
                    @for (int i = 1; i <= (int) ViewData["totalPages"]; i++)
                    {
                        <li class="page-item"><a asp-action="OverviewType" asp-route-type="@ViewData["type"]" asp-route-page="@i" class="page-link @((int) ViewData["page"] == i || ((int) ViewData["page"] == 0 && i == 1) ? "page-link-active" : "")">@i</a></li>
                    }
                    @if ((int) ViewData["page"] < (int) ViewData["totalPages"])
                    {
                        <li class="page-item">
                            <a asp-action="OverviewType" asp-route-type="@ViewData["type"]" asp-route-page="@((int) ViewData["page"] + 1)" class="page-link" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
            }
        </div>
    </div>
    <div class="col-12 col-lg-5" id="paneDetail">
        <div class="bg-white pane d-flex justify-content-center align-content-center h-100 py-4">
            <div class="d-flex flex-column" id="content">
                <h1 class="c-blue text-center">No Knowledge base item was selected.</h1>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script>
    const url = '@Url.Action("Details", "KDB")';
    const contextHTML = document.getElementById('content');
        
    function fillInDetails(data) {
        contextHTML.innerHTML = "";
        contextHTML.insertAdjacentHTML("beforeend",
            `
            <ul class="nav nav-tabs">
                <li class="nav-item"><a class="nav-link active" role="tab" data-toggle="tab" href="#tab-1">Knowledge Database Item</a></li>
              </ul>
              <div class="tab-content">

                <div class="tab-pane active" role="tabpanel" id="tab-1">
                  <div class="row">
                       <div class="col-12 row text-left">
                         <div class="col-4 d-flex align-content-center ">KbItemId:</div>
                         <div class="col-8 class-muted d-flex align-items-center">${data.KbItemId}</div>
                       </div>
                       <div class="col-12 row text-left">
                         <div class="col-4 d-flex align-content-center">Title:</div>
                         <div class="col-8 class-muted d-flex align-items-center">${data.Title}</div>
                       </div>
                       <div class="col-12 row text-left">
                         <div class="col-4 d-flex align-content-center">Type:</div>
                         <div class="col-8 class-muted d-flex align-items-center">${data.Type}</div>
                       </div>
                       <div class="col-12 row text-left">
                         <div class="col-4 d-flex align-content-center">Keywords:</div>
                         <div class="col-8 class-muted d-flex align-items-center">${data.Keywords}</div>
                       </div>
                       <div class="col-12 row text-left">
                         <div class="col-4 d-flex align-content-center">Text:</div>
                         <div class="col-8 class-muted d-flex align-items-center">${data.Text}</div>
                       </div>
                  </div>
                </div>
            </div>
             `
        )
    }

    function sleep (time) {
      return new Promise((resolve) => setTimeout(resolve, time));
    }

    $('.DetailsButtonTr').click(function () {
        contextHTML.innerHTML = ""
        contextHTML.insertAdjacentHTML("beforeend", `<div class="d-flex flex-column justify-content-center align-content-center"><h1>Loading <div class="spinner-border" role="status"><span class="sr-only">Loading...</span></div></h1></div>` )
        // Usage!
        sleep(500).then(() => {
            console.log("start")
            $.ajax({
                url: url,
                type: "get",
                data: { id: $(this).attr('IdKBI') },
                dataType: "json",
                success: function (result) {
                    //result = JSON.stringify(result);
                    result = JSON.parse(result);
                    console.log(result);
                    fillInDetails(result);
                },
                error: function (xhr) {
                    alert("failed");
                }
            });
            console.log("End")
    });
    });
</script>
}

